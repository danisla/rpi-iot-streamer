"use strict";angular.module("webUiApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("webUiApp").controller("MainCtrl",["$scope","$q","thingService","authService",function(a,b,c,d){function e(){return d.isAuthorized()?void c.getThingList().then(function(b){if(200==b.status){var d=b.data.things;for(var e in d)!function(b,e){var f=e.thingName;c.getThingShadow(f).then(function(c){b==d.length-1&&$("#loading").hide();var g=c.data;g.errorType&&console.warn("Error getting device shadow for '"+f+"': "+g.errorMessage),g.state||(console.log("Initializing shadow for "+f),g=a.initial_device_shadow);var h,i=!1;g.state.desired.url?g.state.delta?h="Waiting for update from: '"+g.state.delta.url:(h="URL and quality are in sync with device.",i=!0):h="URL has not yet been set.";var j={thingName:f,attributes:e.attributes,shadow:g,insync:i,status:h,updating:!1,input_url:{streamable:!1}};a.things.push(j),j.shadow.state&&a.checkDesiredUrl(j),a.startShadowWatcher(j)})}(e,d[e])}else console.log("Error getting thing list, status code: "+b.status)}):d.login()}this.doLogin=d.doLogin,a.authorized=d.isAuthorized(),a.initial_device_shadow={state:{desired:{url:null,quality:null},reported:{url:null,quality:null}}},a.things=[],e(),this.startShadowWatcher=a.startShadowWatcher=function(b){setTimeout(function(){c.getThingShadow(b.thingName).then(function(c){var d=c.data.state?c.data:a.initial_device_shadow;return b.shadow.state.desired.url!=d.state.desired.url&&(d.state.desired.url=b.shadow.state.desired.url),b.shadow=d,b.insync=b.shadow.state.reported&&b.shadow.state.desired.url==d.state.reported.url&&b.shadow.state.desired.quality==d.state.reported.quality,b.insync?b.status="URL and quality are in sync with device.":b.status="Waiting for device to sync desired URL and quality",a.startShadowWatcher(b)})},3e3)},a.thingUrlChecking={},this.checkDesiredUrl=a.checkDesiredUrl=function(d){var e=d.thingName,f=d.shadow.state.desired.url;if(f&&f.match(/^(https?:\/\/\w+|rtsp:\/\/\w+|rtmp:\/\/\w+).*/)){console.log("Testing "+d.thingName+" URL: "+f),e in a.thingUrlChecking&&(console.warn("Canceling on-going url check for thing: "+e),a.thingUrlChecking[e].resolve());var g=b.defer();a.thingUrlChecking[e]=g,d.updating=!0,c.testUrl(f,g).then(function(b){delete a.thingUrlChecking[e],d.updating=!1,200==b.status?(d.input_url=b.data,0==Object.keys(d.input_url.streams).length&&(d.input_url.streams=null),console.log(d.thingName+" URL '"+f+"' streamable: "+d.input_url.streamable,d.input_url.streams)):console.error("Error testing url: "+f,b)})}},this.setUrl=function(a,b){var d=a.thingName,e=a.shadow.state.desired.url;b||(b="best"),console.debug("Setting "+d+" URL to: "+e+", quality="+b),a.updating||(a.updating=!0,c.setUrl(d,e,b).then(function(b){b.data.error&&console.error("error setting "+d+" url: "+b.data.error),a.updating=!1}))},this.getQualityButton=function(a,b){return a.shadow.state.reported.quality==b?"success":a.shadow.state.desired.quality==b?"warning":"default"}}]),angular.module("webUiApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("webUiApp").service("thingService",["$http","settings",function(a,b){this.getThingList=function(){return a.get(b.streamer_endpoint+"/streamer/things")},this.getThingShadow=function(c){return a.get(b.streamer_endpoint+"/streamer/"+c)},this.testUrl=function(c,d){return a.get(b.streamer_endpoint+"/streamer/test-url?url="+c,{timeout:d.promise})},this.setUrl=function(c,d,e){return a.put(b.streamer_endpoint+"/streamer/"+c+"?url="+d+"&quality="+e)}}]),angular.module("webUiApp").constant("settings",{streamer_endpoint:"https://hb1zyjxo1g.execute-api.us-west-2.amazonaws.com/prod"}),angular.module("webUiApp").service("authService",["$routeParams","$location","$cookies",function(a,b,c){this.access_token=null,this.isAuthorized=function(){return this.access_token=c.get("__istok"),this.access_token},this.doLogin=function(){window.location.href="https://www.github.com/login/oauth/authorize?client_id=80364444582d4db653e1"},this.login=function(){return this.isAuthorized()?!0:(a.access_token&&(40==a.access_token.length?(console.log("Github login complete."),this.access_token=a.access_token,c.put("__istok",this.access_token)):(console.warn("Invalid access token"),this.access_token=null),b.search("access_token",null),b.search("scope",null),b.search("token_type",null)),this.isAuthorized())}}]),angular.module("webUiApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/main.html",'<div class="jumbotron" ng-show="!authorized"> <p>Authorized: {{authorized}}</p> <p class="lead"> Login to access the control panel. </p> <a class="btn btn-primary" ng-click="main.doLogin()"> Login with GitHub </a> </div> <div class="container" ng-show="authorized"> <div class="row"> <div class="panel panel-info"> <div class="panel-heading"> <h3 class="panel-title">Devices</h3> </div> <div class="panel-body"> <p id="loading">Loading...</p> <!-- Thing --> <div class="col-lg-12" ng-repeat="thing in things | orderBy:\'-thingName\'"> <p> <div class="input-group"> <!-- thing name label --> <span class="input-group-addon">{{thing.thingName}}</span> <!-- url input --> <input type="text" class="{{ (thing.insync) ? \'list-group-item-success\' : \'list-group-item-warning\'}} form-control" placeholder="enter stream url" ng-model="thing.shadow.state.desired.url" ng-change="main.checkDesiredUrl(thing)"> <span class="input-group-btn"> <!-- status dropdown --> <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown" id="dropdownMenu1" aria-haspopup="true" aria-expanded="true"> <span id="input_dropdown" class="glyphicon {{ (thing.updating) ? \'glyphicon-refresh glyphicon-spin\' : \'glyphicon-menu-hamburger\' }}"></span> </button> <ul class="dropdown-menu" aria-labelledby="dropdownMenu1"> <li class="dropdown-header">Device Status</li> <li role="separator" class="divider"></li> <li class="list-group-item-{{ (thing.insync) ? \'success\' : \'warning\' }}"><a>{{thing.status}}</a></li> <li role="separator" class="divider"></li> <div ng-show="thing.shadow.state"> <li class="dropdown-header" ng-show="thing.input_url.streams">Alternate Streams</li> <div ng-show="thing.input_url.streams"> <li class="list-group-item"> <span ng-repeat="(quality,stream) in thing.input_url.streams"> <button type="button" class="btn btn-{{main.getQualityButton(thing, quality)}}" ng-click="main.setUrl(thing, quality)">{{quality}}</button> </span> </li> </div> </div> </ul> <!-- set now button --> <button class="btn btn-default" type="button" ng-click="main.setUrl(thing)" ng-disabled="thing.updating || !thing.input_url.streamable">Set now</button> </span> </div><!-- /input-group --> </p> </div><!-- /.col-lg-6 --> <!-- /Thing --> </div> </div> </div> </div>')}]);